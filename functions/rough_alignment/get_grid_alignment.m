function grid_alignment = get_grid_alignment(sec, overlap)
%GET_GRID_ALIGNMENT Creates an initial grid alignment for a section based on the tile grid coordinates.
%
% Usage:
%   sec.alignments.grid = GET_GRID_ALIGNMENT(sec)
%   sec.alignments.grid = GET_GRID_ALIGNMENT(sec, overlap)
%
% Args:
%   sec is a section structure generated by load_section.
%   overlap is the expected overlap ratio between tiles (default = 0.1).
%
% Returns:
%   grid_alignment is an alignment structure.
%
% Note: These alignments are based off the initial alignment when all tiles
% are at the origin.
%
% See also: load_section, estimate_tile_grid_alignments, rough_align_tiles

% Default
if nargin < 2
    overlap = 0.1;
end

% Loop through grid
tforms = cell(sec.num_tiles, 1);
for r = 1:sec.rows
    for c = 1:sec.cols
        % Skip if grid location is missing the tile
        if sec.grid(r, c) == 0; continue; end
        
        % Get tile index
        i = sec.grid(r, c);
        
        % Calculate translation
        sz = sec.tile_sizes{i}; % [height, width]
        dx = sz(2) * (c - 1) * (1 - overlap);
        dy = sz(1) * (r - 1) * (1 - overlap);
        
        % Create transform
        tforms{i} = make_tform('t', [dx, dy]);
    end
end

% Alignment structure
grid_alignment.tforms = tforms;
grid_alignment.rel_tforms = tforms; % these are relative to identity tforms
grid_alignment.rel_to = 'initial';
grid_alignment.meta.overlap_assumed = overlap;
end

